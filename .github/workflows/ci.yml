name: CI

# Simplified CI focused on essential validations:
# 1. Comprehensive test suite across Ruby/Rails versions
# 2. Performance testing and memory usage verification
# This ensures core functionality and performance without
# overwhelming complexity in the CI pipeline.

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-version:
          - "3.3"
          - "3.4"
        rails-version:
          - "7.0"
          - "7.1"
          - "7.2"
          - "8.0"

    env:
      RAILS_VERSION: ${{ matrix.rails-version }}
      BUNDLE_GEMFILE: ${{ github.workspace }}/Gemfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: false

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.rails-version }}-${{ hashFiles('**/Gemfile.lock', '**/thumbsy.gemspec') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.rails-version }}-
            ${{ runner.os }}-gems-${{ matrix.ruby-version }}-
            ${{ runner.os }}-gems-

      - name: Update Gemfile for Rails version
        run: |
          if [ "${{ matrix.rails-version }}" = "main" ]; then
            echo 'gem "rails", github: "rails/rails", branch: "main"' >> Gemfile
          else
            echo 'gem "rails", "~> ${{ matrix.rails-version }}.0"' >> Gemfile
          fi

      - name: Install dependencies
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run all tests
        run: |
          mkdir -p tmp
          bundle exec rspec --format progress --format RspecJunitFormatter --out tmp/rspec.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-ruby-${{ matrix.ruby-version }}-rails-${{ matrix.rails-version }}
          path: tmp/rspec.xml
