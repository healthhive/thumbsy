name: CI

# Simplified CI focused on essential validations:
# 1. Comprehensive test suite across Ruby/Rails versions (7.1, 7.2, 8.0)
# 2. Performance testing and memory usage verification
# This ensures core functionality and performance without
# overwhelming complexity in the CI pipeline.

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint:
    name: RuboCop (style/lint)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ["3.3"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: false
      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ hashFiles('**/Gemfile.lock', '**/thumbsy.gemspec') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ matrix.ruby-version }}-
      - name: Install dependencies (Ruby ${{ matrix.ruby-version }})
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run RuboCop (style/lint)
        run: |
          echo "ðŸ”Ž Running RuboCop..."
          bundle exec rubocop --parallel --fail-level warning

  test:
    name: "Ruby ${{ matrix.ruby-version }} / Rails ${{ matrix.rails-version }}"
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        ruby-version:
          - "3.3"
          - "3.4"
        rails-version:
          - "7.1"
          - "7.2"
          - "8.0"
        # Ruby/Rails compatibility:
        # Rails 8.0: Ruby 3.2+ (all our Ruby versions supported)
        # Rails 7.2: Ruby 3.1+ (all our Ruby versions supported)
        # Rails 7.1: Ruby 2.7+ (all our Ruby versions supported)
        # Total combinations: 9 (3 Ruby Ã— 3 Rails versions)

    env:
      RAILS_VERSION: ${{ matrix.rails-version }}
      BUNDLE_GEMFILE: ${{ github.workspace }}/Gemfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: false

      - name: Cache gems
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.rails-version }}-${{ hashFiles('**/Gemfile.lock', '**/thumbsy.gemspec') }}
          restore-keys: |
            ${{ runner.os }}-gems-${{ matrix.ruby-version }}-${{ matrix.rails-version }}-
            ${{ runner.os }}-gems-${{ matrix.ruby-version }}-
            ${{ runner.os }}-gems-

      - name: Install dependencies (Ruby ${{ matrix.ruby-version }} / Rails ${{ matrix.rails-version }})
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Run test suite with coverage
        run: |
          mkdir -p tmp
          echo "ðŸ§ª Running Thumbsy test suite..."
          echo "Ruby: ${{ matrix.ruby-version }}, Rails: ${{ matrix.rails-version }}"
          COVERAGE=true bundle exec rspec --format progress --format RspecJunitFormatter --out tmp/rspec.xml

      - name: Upload test results and coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-ruby-${{ matrix.ruby-version }}-rails-${{ matrix.rails-version }}
          path: tmp/rspec.xml
